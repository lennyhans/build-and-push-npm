name: 'Build and Push to an NPM registry'
description: 'Builds and pushes a package to a private (or public) NPM registry, defaults to github, using semantic version from the package.json'
branding:
  icon: 'package'
  color: 'blue'

inputs:
  lib-path:
    required: true
    description: Especifica el directorio relativo de la lib, ej "src/lib/myLibJavascript", debe contener un archivo package.json
  GITHUB_TOKEN:
    required: true
    description: | 
      Especifica el token provisto desde la cuenta de github, es necesario para publicar y 
      generar registro de cambios de versión en el respositorio
  lib-test-pattern:
    required: false
    description: Especifica el patron para la ejecución de pruebas, ej "__test__/*|*.test.js"
    default: ''
  GIT_AUTHOR_NAME:
    required: false
    description: Especifica quien realiza la publicación de la nueva versión
    default: 'toctocdevteam'
  GIT_AUTHOR_EMAIL:
    required: false
    description: Especifica el correo de quien realiza la publicación nueva
    default: 'toctocdevteam+noreply@toctoc.com'
  ENVIROMENT:
    description: 'Environment variable'
    required: false
  registry-url:
    default: 'https://npm.pkg.github.com/'
    description: Especifica el registro NPM objetivo para publicar
    required: false
  package-scope:
    default: '@toctoc'
    description: Especifica el registro NPM objetivo para publicar
    required: false
  dry-run:
    required: false
    default: 'true'
    description: Especifica si se va a publicar o no, esto no genera cambios de versión ni publicación si es verdadero (por defecto)

runs:
  using: 'composite'
  steps:
  - name: Checkout 🛎️
    uses: actions/checkout@v3
    with:
      fetch-depth: 0

  - name: Install Node.js 🏁
    uses: actions/setup-node@v4
    with:
      node-version: 22
      registry-url: ${{ inputs.registry-url }}
      scope: ${{ inputs.package-scope }}
      cache: 'npm'
      cache-dependency-path: ${{ inputs.lib-path }}/package-lock.json

  - name: Dependency installs (mono repo) 🐙
    shell: bash
    run: npm ci

  - name: Dependency installs 🐙
    shell: bash
    run: npm --prefix "${{ inputs.lib-path }}" ci

  - name: Execute unit tests 🧪
    shell: bash
    run: npm --prefix "${{ inputs.lib-path }}" run test -- ${{inputs.lib-test-pattern}}

  - name: Build lib and create the package 🐙 
    shell: bash
    run: npm --prefix "${{ inputs.lib-path }}" run build

  - name: Prepare the release (semantic) 📥
    if: ${{ inputs.dry-run }} == 'false'
    shell: bash
    env:
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      GIT_AUTHOR_NAME : ${{ inputs.GIT_AUTHOR_NAME }}
      GIT_AUTHOR_EMAIL : ${{ inputs.GIT_AUTHOR_EMAIL }}
      GIT_COMMITTER_NAME : ${{ inputs.GIT_AUTHOR_NAME }}
      GIT_COMMITTER_EMAIL : ${{ inputs.GIT_AUTHOR_EMAIL }}
    run: npm x -- multi-semantic-release

  - name: Publish the package to NPM Registry 🚀
    if: ${{ inputs.dry-run }} == 'false'
    shell: bash
    run: npm publish "${{ inputs.lib-path }}"
    env:
      NODE_AUTH_TOKEN: ${{ inputs.GITHUB_TOKEN}}
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
